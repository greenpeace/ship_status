%svg{:style=>"height:0;display:none;"}
  %filter#dropshadow{:height=>"100%"}
    %feGaussianBlur{:in=>"SourceAlpha",:stdDeviation=>"0",:result=>"blur"}/
    %feOffset{:in=>"blur",:dx=>"2",:dy=>"2",:result=>"offsetBlur"}/
    %feFlood{"flood-color"=>"#ff0000","flood-opacity"=>"1",:result=>"offsetColor"}/
    %feComposite{:in=>"offsetColor",:in2=>"offsetBlur",:operator=>"in",:result=>"offsetblur"}/

.row
  .col-sm-12.clearfix#legend
    .pull-right
      .btn-group.btn-toggle
        %button.btn.btn-info.active Tropik
        %button.btn.btn-default Sidereal
      %input#year{:type=>"number",:value=>Date.today.year}
      %input#month{:type=>"number",:min=>1,:max=>12,:value=>Date.today.month}
      %button.btn.btn-info#submit ↪
    .pull-left
      %h1.title
        %strong luna.yako.io
.row
  .col-sm-12
    #canvas

-content_for :head_end do
  %link{:href => "/stylesheets/luna.css?#{rand(1024)}", :rel => "stylesheet"}/

-content_for :body_end do
  %script{:src=>'/javascripts/svg.min.js'}
  %script{:src=>'/javascripts/jquery.csv.min.js'}

  :javascript
    
    var width, height, canvas, csv, lat, lon, lonc, tz, year, month, mon, weather, urlParams;
    var transits;
    var keytimes = {},
        mid = 0.42,
        tropic = true,
        owmapi = "3d6d04edb0fc084dd68b3a3d5e8c4ba6",
        silver = "#BFBFBF",
        blue = "#294166",
        consts = { 
          'Ari': '♈',
          'Tau': '♉',
          'Ori': '♉',
          'Gem': '♊',
          'Cnc': '♋',
          'Leo': '♌',
          'Sex': '♌',
          'Vir': '♍',
          'Lib': '♎',
          'Sco': '♏',
          'Oph': '♏',
          'Sgr': '♐',
          'Cap': '♑',
          'Aqr': '♒',
          'Psc': '♓',
          'Cet': '♓'
        }

        cicons = {
         'Ari': 'm 4.2776659,292.12298 q -0.5760658,0 -0.7942694,0.81173 -0.090193,0.32876 -0.090193,0.69533 v 2.26062 H 2.9567963 v -2.25478 q 0,-0.60225 -0.2007504,-1.01831 -0.2414836,-0.49459 -0.6895279,-0.49459 -0.2996702,0 -0.5411482,0.17748 -0.238573,0.17455 -0.238573,0.41314 0,0.45677 0.2065663,0.63425 0.2094768,0.17747 0.7011652,0.18328 v 0.28221 q -0.6487945,0 -0.9601021,-0.25894 -0.30839678,-0.25893 -0.30839678,-0.86991 0,-0.39568 0.37240478,-0.66043 0.3724047,-0.26476 0.7884477,-0.26476 0.5353325,0 0.8960998,0.50334 0.1105571,0.15418 0.1920181,0.33457 0.2705744,-0.59642 0.7360775,-0.7739 0.1629272,-0.064 0.3520405,-0.064 0.4160433,0 0.7884476,0.26475 0.3724052,0.26476 0.3724052,0.66044 0,0.61096 -0.3113077,0.86991 -0.3083971,0.25894 -0.9571913,0.25894 v -0.28222 q 0.4916882,-0.006 0.6982542,-0.18328 0.2094772,-0.17748 0.2094772,-0.61971 0,-0.25312 -0.2414779,-0.42769 -0.2385733,-0.17747 -0.5440592,-0.17747 z',
         'Tau': 'm 3.1051707,293.18636 q 0.017454,-0.002 0.043632,-0.002 h 0.064008 q 0.020381,0 0.029107,0.002 0.3985842,-0.67498 0.7448037,-1.01247 0.5091474,-0.50041 1.1375777,-0.50041 l -0.087283,0.20366 q -0.3898577,0 -0.7506252,0.48587 -0.1920239,0.25892 -0.3433083,0.52078 -0.1483798,0.25894 -0.2385733,0.4044 0.3869524,0.15711 0.6255198,0.51206 0.2414838,0.35204 0.2414838,0.77972 0,0.57897 -0.4102274,0.9892 -0.4073163,0.40731 -0.986287,0.40731 -0.578971,0 -0.9891982,-0.40731 -0.4073166,-0.41023 -0.4073166,-0.9892 0,-0.42768 0.2385729,-0.77972 0.2414782,-0.35204 0.6255201,-0.51206 -0.090193,-0.14546 -0.1832917,-0.30839 -0.090193,-0.16293 -0.2618474,-0.43059 -0.4335019,-0.67207 -0.8844569,-0.67207 l -0.087283,-0.20366 q 0.7826319,0 1.4168785,0.81754 0.2123877,0.27348 0.4625979,0.69534 z m 0.069824,2.35372 q 0.3956788,0 0.6778904,-0.28223 0.2822116,-0.28219 0.2822116,-0.67788 0,-0.39568 -0.2822116,-0.67789 -0.2822116,-0.28221 -0.6778904,-0.28221 -0.3956793,0 -0.6778907,0.28221 -0.2822114,0.28221 -0.2822114,0.67789 0,0.39569 0.2822114,0.67788 0.2822114,0.28223 0.6778907,0.28223 z',
         'Ori': 'm 3.1051707,293.18636 q 0.017454,-0.002 0.043632,-0.002 h 0.064008 q 0.020381,0 0.029107,0.002 0.3985842,-0.67498 0.7448037,-1.01247 0.5091474,-0.50041 1.1375777,-0.50041 l -0.087283,0.20366 q -0.3898577,0 -0.7506252,0.48587 -0.1920239,0.25892 -0.3433083,0.52078 -0.1483798,0.25894 -0.2385733,0.4044 0.3869524,0.15711 0.6255198,0.51206 0.2414838,0.35204 0.2414838,0.77972 0,0.57897 -0.4102274,0.9892 -0.4073163,0.40731 -0.986287,0.40731 -0.578971,0 -0.9891982,-0.40731 -0.4073166,-0.41023 -0.4073166,-0.9892 0,-0.42768 0.2385729,-0.77972 0.2414782,-0.35204 0.6255201,-0.51206 -0.090193,-0.14546 -0.1832917,-0.30839 -0.090193,-0.16293 -0.2618474,-0.43059 -0.4335019,-0.67207 -0.8844569,-0.67207 l -0.087283,-0.20366 q 0.7826319,0 1.4168785,0.81754 0.2123877,0.27348 0.4625979,0.69534 z m 0.069824,2.35372 q 0.3956788,0 0.6778904,-0.28223 0.2822116,-0.28219 0.2822116,-0.67788 0,-0.39568 -0.2822116,-0.67789 -0.2822116,-0.28221 -0.6778904,-0.28221 -0.3956793,0 -0.6778907,0.28221 -0.2822114,0.28221 -0.2822114,0.67789 0,0.39569 0.2822114,0.67788 0.2822114,0.28223 0.6778907,0.28223 z',
         'Gem': 'm 5.2683054,291.98333 q 0,0.0232 -0.1774759,0.0291 -0.1774751,0.002 -0.3316708,0.0524 -0.2822114,0.0902 -0.2822114,0.32877 v 2.92977 q 0,0.17748 0.2763897,0.27349 0.22112,0.0756 0.4858722,0.0756 0.02325,0 0.02325,0.0232 v 0.15711 q 0,0.0232 -0.02325,0.0232 H 1.1049468 q -0.023253,0 -0.023253,-0.0232 v -0.15711 q 0,-0.0232 0.160017,-0.0232 0.1629278,0 0.3520408,-0.0698 0.2793006,-0.10473 0.2793006,-0.34621 v -2.90067 q 0,-0.17747 -0.2793006,-0.27349 -0.2182091,-0.0756 -0.4829618,-0.0756 -0.023253,0 -0.023253,-0.0233 v -0.1862 q 0,-0.0232 0.023253,-0.0232 H 5.245053 q 0.02325,0 0.02325,0.0232 z m -2.9443196,3.55822 h 1.6758156 v -3.43311 H 2.3239858 Z',
         'Cnc': 'm 2.9684123,292.00656 -0.4975042,0.0321 q -0.0058,0 0.029107,0.0262 0.037834,0.0233 0.145469,0.12219 0.1105571,0.096 0.2298408,0.32004 0.1192893,0.22111 0.1192893,0.48004 0,0.48878 -0.3083967,0.81756 -0.3083968,0.32584 -0.7884535,0.32584 -0.480051,0 -0.7884478,-0.32876 -0.30548598,-0.32877 -0.30548598,-0.76226 0,-0.64589 0.53533248,-1.00375 0.5353267,-0.36076 1.5216142,-0.36076 2.1209607,0 2.5864632,0.76517 0.098919,0.16583 0.098919,0.37241 0,0.0175 -0.03198,0.0175 -0.03198,0 -0.066918,-0.0582 -0.1512852,-0.38404 -0.9630131,-0.59061 -0.6808014,-0.17456 -1.5157985,-0.17456 z m -1.0677486,0.32876 q -0.285122,0 -0.494599,0.21238 -0.2065661,0.21238 -0.2065661,0.49461 0,0.28802 0.2065661,0.49168 0.209477,0.20365 0.4916883,0.20365 0.2851223,0 0.4945992,-0.20948 0.2094769,-0.20948 0.2094769,-0.49169 0,-0.28512 -0.2094769,-0.49167 -0.2065663,-0.20948 -0.4916885,-0.20948 z m 1.4808867,3.30799 0.4975098,-0.0321 q 0.00583,0 -0.03198,-0.0232 -0.034908,-0.0262 -0.1454744,-0.12221 -0.1076469,-0.0989 -0.2269306,-0.32003 -0.1192891,-0.22402 -0.1192891,-0.48296 0,-0.48588 0.3083966,-0.81464 0.3113075,-0.32877 0.7884535,-0.32877 0.4800512,0 0.7855371,0.32877 0.3083971,0.32876 0.3083971,0.76227 0,0.6459 -0.5353329,1.00665 -0.535327,0.35787 -1.5216143,0.35787 -2.1180493,0 -2.58646297,-0.76519 -0.0989199,-0.16291 -0.0989199,-0.37239 0,-0.0176 0.0319785,-0.0176 0.0319785,0 0.0669185,0.0582 0.20365547,0.50334 1.45761187,0.68954 0.5120523,0.0756 1.0211997,0.0756 z m 1.0677487,-0.32877 q 0.2851221,0 0.4916939,-0.21239 0.2094765,-0.21238 0.2094765,-0.49459 0,-0.28804 -0.2094765,-0.49169 -0.2065718,-0.20366 -0.4887834,-0.20366 -0.285122,0 -0.4945994,0.20947 -0.2094764,0.20948 -0.2094764,0.49169 0,0.28513 0.206566,0.49461 0.2094824,0.20656 0.4945993,0.20656 z',
         'Leo': 'm 5.2945015,296.36638 q -0.1512902,0.11637 -0.3404036,0.11637 -0.448044,0 -0.6895278,-0.22402 Q 3.9649,295.98233 3.9649,295.31025 q 0,-0.25893 0.1047409,-0.6226 0.1076469,-0.36658 0.1832916,-0.60225 0.2851222,-0.91646 0.2851222,-1.39942 0,-1.13176 -0.9193683,-1.13176 -0.3113078,0 -0.4800569,0.25603 -0.1658328,0.25602 -0.1658328,0.62261 0,0.2182 0.066913,0.46842 0.066918,0.2473 0.1105571,0.40149 0.046561,0.15421 0.1134679,0.39567 0.066918,0.24149 0.066918,0.47715 0,0.23566 -0.084372,0.47714 -0.081467,0.24148 -0.2327515,0.42187 -0.3287662,0.38694 -0.8670038,0.38694 -0.430591,0 -0.7622624,-0.31712 -0.3287663,-0.32003 -0.3287663,-0.78262 0,-0.46551 0.3229449,-0.78263 0.3258554,-0.32004 0.7826318,-0.32004 0.2647528,0 0.5033257,0.11928 0.087283,0.0437 0.130921,0.0785 0.046561,0.0349 0.043632,0.0262 -0.2589368,-0.6488 -0.2589368,-1.02702 0,-0.52952 0.2909436,-0.90774 0.2909381,-0.38114 0.8553608,-0.38114 0.5673335,0 0.8844622,0.41024 0.3200339,0.41022 0.3200339,1.09684 0,0.51787 -0.2356621,1.32959 -0.2327516,0.81174 -0.2793011,1.00084 -0.043631,0.18911 -0.043631,0.28803 0,0.78845 0.4567762,0.78845 0.2676634,0 0.3636728,-0.0408 0.096009,-0.0407 0.101831,-0.0669 z m -2.4293513,-1.99877 q 0,-0.28511 -0.209477,-0.49169 -0.2065717,-0.20948 -0.4887832,-0.20948 -0.285122,0 -0.494599,0.20948 -0.209477,0.20948 -0.209477,0.49169 0,0.28222 0.2036611,0.4917 0.2065663,0.20947 0.4916884,0.20947 0.2822114,0 0.4945991,-0.20657 0.2123876,-0.20948 0.2123876,-0.4946 z',
         'Sex': 'm 5.2945015,296.36638 q -0.1512902,0.11637 -0.3404036,0.11637 -0.448044,0 -0.6895278,-0.22402 Q 3.9649,295.98233 3.9649,295.31025 q 0,-0.25893 0.1047409,-0.6226 0.1076469,-0.36658 0.1832916,-0.60225 0.2851222,-0.91646 0.2851222,-1.39942 0,-1.13176 -0.9193683,-1.13176 -0.3113078,0 -0.4800569,0.25603 -0.1658328,0.25602 -0.1658328,0.62261 0,0.2182 0.066913,0.46842 0.066918,0.2473 0.1105571,0.40149 0.046561,0.15421 0.1134679,0.39567 0.066918,0.24149 0.066918,0.47715 0,0.23566 -0.084372,0.47714 -0.081467,0.24148 -0.2327515,0.42187 -0.3287662,0.38694 -0.8670038,0.38694 -0.430591,0 -0.7622624,-0.31712 -0.3287663,-0.32003 -0.3287663,-0.78262 0,-0.46551 0.3229449,-0.78263 0.3258554,-0.32004 0.7826318,-0.32004 0.2647528,0 0.5033257,0.11928 0.087283,0.0437 0.130921,0.0785 0.046561,0.0349 0.043632,0.0262 -0.2589368,-0.6488 -0.2589368,-1.02702 0,-0.52952 0.2909436,-0.90774 0.2909381,-0.38114 0.8553608,-0.38114 0.5673335,0 0.8844622,0.41024 0.3200339,0.41022 0.3200339,1.09684 0,0.51787 -0.2356621,1.32959 -0.2327516,0.81174 -0.2793011,1.00084 -0.043631,0.18911 -0.043631,0.28803 0,0.78845 0.4567762,0.78845 0.2676634,0 0.3636728,-0.0408 0.096009,-0.0407 0.101831,-0.0669 z m -2.4293513,-1.99877 q 0,-0.28511 -0.209477,-0.49169 -0.2065717,-0.20948 -0.4887832,-0.20948 -0.285122,0 -0.494599,0.20948 -0.209477,0.20948 -0.209477,0.49169 0,0.28222 0.2036611,0.4917 0.2065663,0.20947 0.4916884,0.20947 0.2822114,0 0.4945991,-0.20657 0.2123876,-0.20948 0.2123876,-0.4946 z',
         'Vir': 'm 2.9509789,295.76466 q 0.532416,0 1.0793858,-0.13383 v -3.95388 q 0,-0.22693 -0.1396528,-0.3695 -0.1396476,-0.14546 -0.4247704,-0.14546 -0.1367421,0 -0.3956789,0.12511 l 0.0058,0.0175 q -0.1221944,0.0553 -0.2211142,0.10765 -0.096009,0.0494 -0.09892,0.0902 v 3.60483 H 2.3021618 v -3.43021 q 0,-0.22691 -0.1396531,-0.36948 -0.1396532,-0.14547 -0.3869528,-0.14547 -0.2443887,0 -0.610972,0.24438 -0.093104,0.0611 -0.1367424,0.11348 v 3.5873 H 0.57397576 v -3.65132 q 0,-0.12218 -0.13383736,-0.16874 -0.0581863,-0.0204 -0.12510226,-0.0321 -0.0669163,-0.0145 -0.10764808,-0.0262 -0.0378224,-0.0117 -0.0494599,-0.0204 -0.008726,-0.0117 -0.008726,-0.0437 0,-0.0349 0.0436382,-0.0582 l 0.74189747,-0.34916 q 0.0349061,-0.0175 0.0436335,-0.0175 0.0494879,0 0.0494879,0.0698 v 0.48296 q 0.00282,0.0175 0.020381,0.0175 0.020381,0 0.096009,-0.0407 0.078556,-0.0408 0.2036611,-0.11346 0.1251052,-0.0756 0.3287606,-0.17457 0.2065718,-0.0989 0.4364126,-0.0989 0.3694939,0 0.529511,0.31711 0.061097,0.12802 0.1105571,0.11056 0.049431,-0.0204 0.072734,-0.0291 l 0.2123878,-0.10765 v 0.002 q 0.5004148,-0.29384 0.8349968,-0.29384 0.3374932,0 0.4975097,0.31713 0.061101,0.12801 0.1105574,0.11056 0.049487,-0.0204 0.072736,-0.0291 l 0.6371633,-0.32003 q 0.1512843,-0.0785 0.3869472,-0.0785 0.6226144,0 0.6226144,1.22485 v 1.72818 q 0,1.2016 -1.2714093,1.78057 -0.2152983,0.0989 -0.4451394,0.17164 V 296.91 H 4.030384 v -1.00083 q -0.6313416,0.13674 -1.3121429,0.13674 z m 2.7959345,-3.71531 q 0,-0.38986 -0.049486,-0.53241 -0.049487,-0.14547 -0.1047357,-0.21239 -0.1163785,-0.14546 -0.3054919,-0.14546 -0.1862021,0 -0.7273502,0.26183 -0.072736,0.0436 -0.075646,0.0814 v 3.98005 q 0.8960996,-0.36366 1.1666736,-1.07356 0.096009,-0.25894 0.096009,-0.57315 z',
         'Lib': 'm 4.209295,294.06938 h 1.5245247 v 0.43641 H 3.6332292 v -0.54117 q 0.3694938,-0.18327 0.4858722,-0.58768 0.037835,-0.12801 0.037835,-0.29676 0,-0.16874 -0.075646,-0.3433 -0.075645,-0.17458 -0.2065661,-0.30549 -0.2822115,-0.28222 -0.6778907,-0.28222 -0.3956793,0 -0.6778905,0.28222 -0.2822173,0.28221 -0.2822173,0.69243 0,0.40732 0.3113076,0.69535 0.096014,0.0873 0.2123877,0.14545 v 0.54117 H 0.61619157 v -0.43641 H 2.1814498 q -0.3811312,-0.40733 -0.3811312,-0.97174 0,-0.56734 0.4073165,-0.97466 0.4102274,-0.41023 0.9891982,-0.41023 0.5789708,0 0.9862878,0.41023 0.4102268,0.40732 0.4102268,0.97757 0,0.56732 -0.3840419,0.96883 z m -3.59311471,1.86784 V 295.5008 H 5.7338197 v 0.43642 z',
         'Sco': 'm 4.3750603,292.57999 -0.026178,2.37698 q 0,0.57606 0.1687489,0.84083 0.1716548,0.26766 0.4014952,0.26766 0.1629278,0 0.285122,-0.0815 0.1251055,-0.0786 0.3345819,-0.34912 l -0.4655025,-0.35786 1.2510397,-0.27931 -0.0028,1.24232 -0.4829565,-0.3724 q -0.2822167,0.34913 -0.3840419,0.42769 -0.1891127,0.14255 -0.4509604,0.14255 -0.4975046,0 -0.8029956,-0.38695 -0.3054866,-0.38404 -0.3054866,-0.95137 0.020381,-0.16293 0.020381,-0.95138 v -1.01247 l -0.00583,-0.61389 q 0,-0.37531 -0.055289,-0.52369 -0.052363,-0.15129 -0.1105574,-0.21821 -0.1192837,-0.14837 -0.3083965,-0.14837 -0.1862024,0 -0.7273505,0.26185 -0.072734,0.0437 -0.075646,0.0814 v 3.60476 H 2.1785898 v -3.43019 q 0,-0.22693 -0.1396531,-0.3695 -0.1396532,-0.14546 -0.3869528,-0.14546 -0.2472938,0 -0.6138827,0.24438 -0.0901879,0.0611 -0.13383181,0.11347 v 3.5873 H 0.4504037 v -3.6513 q 0,-0.12221 -0.13383337,-0.16875 -0.0581884,-0.0204 -0.12510456,-0.0321 -0.0669163,-0.0145 -0.10764749,-0.0262 -0.03782239,-0.0117 -0.0494599,-0.0204 -0.0087263,-0.0117 -0.0087263,-0.0437 0,-0.0349 0.04363816,-0.0583 l 0.74189524,-0.34913 q 0.034906,-0.0175 0.043633,-0.0175 0.049488,0 0.049488,0.0698 v 0.48295 q 0.00282,0.0175 0.0203808,0.0175 0.0203808,0 0.0960152,-0.0407 0.07855,-0.0408 0.2036554,-0.11347 0.1251052,-0.0756 0.3287607,-0.17457 0.2065718,-0.0989 0.4364126,-0.0989 0.3694939,0 0.5266002,0.31712 0.064008,0.12802 0.1134678,0.11055 0.049488,-0.0204 0.072734,-0.0291 l 0.637163,-0.32004 q 0.1512903,-0.0786 0.3403978,-0.0786 0.3113076,0 0.471325,0.22111 0.2240244,0.32003 0.2240244,1.00376 z',
         'Oph': 'm 2.2899469,291.96135 q 0.116341,0.0498 0.1703625,0.0498 0.045693,0 0.045693,-0.0374 0,-0.025 -0.020769,-0.0665 -0.1495875,-0.0456 -0.1952961,0.054 z m 1.0803493,4.60395 v 0.27423 q -0.049862,0.12051 -0.1620542,0.12051 -0.1454336,0 -0.1578954,-0.26593 v -0.19946 q -0.7520917,-0.14127 -0.7520917,-0.40721 0,-0.34072 0.6814494,-0.44876 l 0.00396,0.1953 q -0.2700873,0.0997 -0.2700873,0.19945 0,0.1953 0.6689871,0.32411 0.6731415,0.1288 0.6648289,0.62328 H 3.985069 q -0.1163458,-0.2701 -0.6149711,-0.41552 z m -0.3199496,-1.6787 q -1.1883873,-0.1579 -1.1883873,-0.61913 0,-0.41136 1.1219039,-0.60665 v 0.28255 q -0.710537,0.15789 -0.710537,0.36982 0,0.19113 1.1551404,0.37812 1.155146,0.18283 1.1676076,0.58587 -0.016613,0.33657 -1.1592945,0.53188 l -0.00395,-0.22023 q 0.7562403,-0.14128 0.7562403,-0.34488 0,-0.16205 -0.8185696,-0.30334 v 1.37953 l -0.319954,-0.079 z m 0.3199496,-1.84075 v 1.59144 l -0.3199496,-0.0665 v -1.54989 q -1.6371449,-0.079 -1.6537658,-0.65236 0.054017,-0.59835 0.9390698,-0.61913 0.016617,0 0.029078,0 0.2700873,0 0.4903122,0.28672 l -0.4653784,0.12465 0.3947411,0.10388 q -0.099725,0.0249 -0.207758,0.0249 -0.2368456,0 -0.5193999,-0.11219 -0.033232,-0.008 -0.062325,-0.008 -0.1869832,0 -0.1869832,0.22437 0,0.20777 1.5581946,0.30749 1.5623533,0.0956 1.5872871,0.58173 -0.029076,0.57341 -1.5332711,0.63989 v -0.25346 q 1.1385248,-0.13297 1.1302169,-0.38643 0.00395,-0.004 0.00395,-0.0125 0,-0.13712 -1.184233,-0.22438 z m 0,-0.36566 -0.3199496,-0.0291 -0.02077,-1.25071 q -0.087263,-0.0457 -0.1371206,-0.14129 -0.049863,-0.0956 -0.049863,-0.19528 0,-0.10389 0.049863,-0.19946 0.049857,-0.0956 0.1371206,-0.14542 0.087258,-0.0498 0.1786704,-0.0498 0.095571,0 0.182829,0.0498 0.087257,0.0498 0.1371208,0.14542 0.04986,0.0956 0.04986,0.19946 0,0.0997 -0.04986,0.19528 -0.045695,0.0956 -0.1329671,0.14129 z',
         'Sgr': 'M 4.6820718,292.05025 H 3.6405027 v -0.37823 h 1.6874586 v 1.71655 H 4.9497352 v -1.07066 l -1.7456392,1.74564 0.738988,0.739 -0.2676693,0.26765 -0.7389876,-0.73898 -1.6467193,1.64672 -0.2676691,-0.26767 1.646725,-1.64672 -0.7418987,-0.7419 0.2676635,-0.26767 0.7418986,0.7419 z',
         'Cap': 'm 4.6966197,296.13941 q -0.5411481,0 -1.169585,-0.43059 v -0.40731 q 0.3113076,0.22403 0.471325,0.29385 0.320034,0.14256 0.69826,0.14256 0.206566,0 0.3607616,-0.2182 0.1542015,-0.21821 0.1542015,-0.41605 0,-0.19784 -0.090193,-0.34621 -0.087283,-0.14839 -0.2269299,-0.2764 Q 4.7548064,294.35305 4.5831523,294.23957 4.4144086,294.1232 4.2514808,294.00974 3.8499804,293.73917 3.7365125,293.5355 3.454301,293.18637 3.3961148,292.81979 L 3.1779111,292.69177 2.153801,295.96485 0.75728625,291.63566 H 1.123869 l 1.0299316,3.17416 0.8320862,-2.66501 0.4189538,0.27347 q 0.072736,-0.37822 0.3636779,-0.64297 0.2938491,-0.26476 0.7186247,-0.26476 0.42768,0 0.7651725,0.31422 0.3403985,0.3113 0.3403985,0.72736 0,0.41603 -0.2298412,0.71862 -0.2967595,0.38985 -0.7622679,0.4335 -0.066911,0.006 -0.066911,0.0145 0.1920181,0.13383 0.3811314,0.27349 0.6691639,0.49168 0.6691639,1.0852 0,0.34332 -0.2531205,0.70118 -0.2531155,0.36075 -0.6342469,0.36075 z m 0.4800512,-3.54365 q 0,-0.28803 -0.2094773,-0.48588 -0.2094764,-0.20073 -0.4975097,-0.20073 -0.2880326,0 -0.4858723,0.21238 -0.1949292,0.21238 -0.1949292,0.46841 0,0.25312 0.2123877,0.48296 0.2152983,0.22985 0.4945994,0.22985 0.2822114,0 0.4800511,-0.20948 0.2007503,-0.20948 0.2007503,-0.49751 z',
         'Aqr': 'm 4.7911763,294.78215 q 0.052363,-0.0931 0.096009,-0.18911 0.043632,-0.096 0.12801,-0.21529 0.084377,-0.1193 0.1658384,-0.18621 0.081462,-0.0669 0.2385733,-0.0669 v 0.43641 q -0.1396535,0 -0.2618478,0.22984 -0.049486,0.096 -0.093104,0.20075 -0.043632,0.10182 -0.1134626,0.20367 -0.1658384,0.25022 -0.4305966,0.25022 -0.2211141,0 -0.3520354,-0.15129 -0.1280159,-0.1513 -0.1832915,-0.27932 -0.052363,-0.12801 -0.101831,-0.22403 -0.1192837,-0.22984 -0.2589364,-0.22984 -0.1396535,0 -0.2589372,0.22984 -0.052359,0.096 -0.096009,0.20075 -0.043632,0.10182 -0.1134678,0.20658 -0.1658385,0.2473 -0.4305912,0.2473 -0.2240249,0 -0.3549459,-0.15129 -0.1280159,-0.1513 -0.1803864,-0.27931 -0.052359,-0.12801 -0.1047358,-0.22403 -0.1192892,-0.22984 -0.2589368,-0.22984 -0.1396531,0 -0.2589368,0.22984 -0.052359,0.096 -0.096009,0.20075 -0.043632,0.10182 -0.1134678,0.20366 -0.1658385,0.25022 -0.42768605,0.25022 v -0.43643 q 0.17747585,0 0.36658885,-0.41602 0.1163729,-0.25894 0.2967594,-0.40441 0.07564,-0.064 0.2327515,-0.064 0.1571063,0 0.2385673,0.0668 0.1774758,0.14837 0.2938544,0.40152 0.1891075,0.41602 0.3665832,0.41602 0.1774759,0 0.3665832,-0.41602 0.1163786,-0.25314 0.2996704,-0.40443 0.075645,-0.0639 0.2327517,-0.0639 0.1571061,0 0.2385726,0.0668 0.1745654,0.14257 0.2909378,0.40151 0.1891134,0.41602 0.3665834,0.41602 0.142564,0 0.2705799,-0.22692 z m -2.4322622,-2.10932 q 0.1891075,0.41605 0.3520352,0.41605 0.2443889,0 0.4015008,-0.4335 0.037834,-0.10474 0.1192836,-0.21529 0.084372,-0.11055 0.1600172,-0.17166 0.075645,-0.064 0.2327517,-0.064 0.1571061,0 0.2385726,0.0669 0.1745654,0.14255 0.2909378,0.40148 0.1891134,0.41605 0.3665834,0.41605 0.142564,0 0.2705799,-0.22693 0.052363,-0.0932 0.096009,-0.18912 0.043632,-0.096 0.12801,-0.21529 0.084377,-0.11928 0.1658384,-0.18619 0.081462,-0.0669 0.2385733,-0.0669 v 0.43641 q -0.1396535,0 -0.2618478,0.22984 -0.049486,0.096 -0.093104,0.20076 -0.043632,0.10182 -0.1134626,0.20366 -0.1658384,0.2502 -0.4305966,0.2502 -0.2211141,0 -0.3520354,-0.15129 -0.1280159,-0.1513 -0.1832915,-0.27931 -0.052363,-0.12801 -0.101831,-0.22402 -0.1192837,-0.22984 -0.2589364,-0.22984 -0.1396535,0 -0.2589372,0.22984 -0.052359,0.096 -0.096009,0.20076 -0.043632,0.10182 -0.1134678,0.20656 -0.1658385,0.2473 -0.4305912,0.2473 -0.2240249,0 -0.3549459,-0.15129 -0.1280159,-0.1513 -0.1803864,-0.27931 -0.052359,-0.12801 -0.1047358,-0.22402 -0.1192892,-0.22984 -0.2589368,-0.22984 -0.1396531,0 -0.2589368,0.22984 -0.052359,0.096 -0.096009,0.20076 -0.043632,0.10182 -0.1134678,0.20366 -0.1658385,0.2502 -0.42768605,0.2502 v -0.43641 q 0.17747585,0 0.36658885,-0.41605 0.1163729,-0.25895 0.2967594,-0.4044 0.07564,-0.064 0.1978397,-0.064 0.1221944,0 0.1832916,0.0232 0.1134679,0.0378 0.2211141,0.1862 0.1105571,0.14547 0.1629278,0.25895 z',
         'Psc': 'm 4.2223845,293.9879 q 0,1.14631 0.2851227,1.94932 H 4.0914639 q -0.29967,-0.84664 -0.29967,-1.94932 H 2.5291106 q 0,1.10849 -0.3025753,1.94932 H 1.8104922 q 0.2880272,-0.81755 0.2880272,-1.94932 H 1.3129823 v -0.43639 H 2.0636075 Q 1.9530504,292.5943 1.5079112,291.71275 h 0.4044059 q 0.4655086,0.8641 0.5818817,1.83876 h 1.3325069 q 0.1192889,-0.9892 0.5818817,-1.83876 h 0.4073162 q -0.4509552,0.88738 -0.5615119,1.83876 h 0.782626 v 0.43639 z',
         'Cet': 'm 4.2223845,293.9879 q 0,1.14631 0.2851227,1.94932 H 4.0914639 q -0.29967,-0.84664 -0.29967,-1.94932 H 2.5291106 q 0,1.10849 -0.3025753,1.94932 H 1.8104922 q 0.2880272,-0.81755 0.2880272,-1.94932 H 1.3129823 v -0.43639 H 2.0636075 Q 1.9530504,292.5943 1.5079112,291.71275 h 0.4044059 q 0.4655086,0.8641 0.5818817,1.83876 h 1.3325069 q 0.1192889,-0.9892 0.5818817,-1.83876 h 0.4073162 q -0.4509552,0.88738 -0.5615119,1.83876 h 0.782626 v 0.43639 z'
        }
        months = [ null, 'OCAK', 'ŞUBAT', 'MART', 'NİSAN', 'MAYIS', 'HAZİRAN', 'TEMMUZ', 'AĞUSTOS', 'EYLÜL', 'EKİM', 'KASIM', 'ARALIK' ]
        monthm = [ null, 'Ocak', 'ŞubaT', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık' ]
        monthc = [ null, '#3399FF', '#33FFFF', '#33FF99', '#33FF33', '#99FF33', '#FFFF33', '#FF9933', '#FF3333', '#FF3399', '#FF33FF', '#9933FF', '#3333FF' ]
        moons = [null];
    
    function draw() {
      $("#canvas").html("");
      width = $("#canvas").width();
      height = width * 0.25 + 32;//Math.min(window.innerHeight / 2, 360);
      canvas = SVG('canvas').size(width, height);
      //canvas.rect(width,height).fill({color:blue, opacity: 1})
      canvas.spof();
    }
    
    function drawMonth() {
      draw();
      var day = 0, 
          cnst = csv[0][6],
          cnsts = [],
          hour = -1,
          mleft = width / 20,//Math.min((width / (keytimes[year][month].days + 2)) * 2, 48),
          daywidth = parseInt((width-mleft) / (keytimes[year][month].days)),
          trances = [],
          transits = {},
          transit = -1,
          fresh = true,
          gold = monthc[month],
          yesphase = null,
          wax = null,
          phoney = Math.min(0.2 + width / 1600, 1),
          i = 0;
      $("#legend button").css("background","transparent");
      $("#legend button#submit, #legend button.active").css("background",gold);
      canvas.line(mleft,height*mid,mleft+daywidth*keytimes[year][month].days,height*mid).stroke({width:3,color:silver})

      for(var i = 1; i <= 12; i++) {
        if (i == month) {
          g = canvas.group().move(0,height/12*(i-1));
          g.rect(mleft*0.7, height*0.075)
            .fill({color:monthc[i]})
            //.stroke({width:0, color:blue});
        } else {
          canvas.rect(mleft*0.2, height*0.075).translate(mleft*0.5,height/12*(i-1))
            .attr("style","transform:rotation(180);")
            .fill({color:monthc[i]})
            .addClass("rainbow").attr("data-month",i).click(function(){
              $("#month").val(this.attr("data-month"));
              submit();
            });
          //g.rect(mleft*0.75-4, height/12-5).fill({color:monthc[i]})
        }
      }

      //canvas.rect(mleft,height).fill({color:"#000",opacity:csv[0][5]/2 + 0})
      day = 0;
      $.each($(csv),function(i,e){
        d = new Date(e[0])
        d = d.addHours(tz)
        if (fresh) {
          yesphase = e[5];
        }
        if (fresh && d.getDate() != 1) {
          trac = p2c(1,e[8]);
          trances.push( Math.abs(Math.atan2(-trac.y+lonc.y,-trac.x+lonc.x) ) );
          return true;
        }
        fresh = false;

        if (e[5] > yesphase) { wax = true; } else { wax = false; }
        yesphase = e[5]
        trac = p2c(1,e[8]);
        trances.push( Math.abs(Math.atan2(-trac.y+lonc.y,-trac.x+lonc.x) ) );
        //console.log(d.getDate())
        
        tro = tropic? 7 : 6;
        if (consts[e[tro]] != cnst) {
          cnst = consts[e[tro]];
          cnsts.push([cnst,e[tro],i])
        }
        if (d.getDate() != day) {
          day = d.getDate();
          console.log(trances)
          day <= 9 ? da = "0"+String(day) : da = day;
          if (trances.length == 24 || day == 1) {
            if ((transit > 24 - tz) && trances.indexOf(trances.min()) == 0) {
              transit = -1;
            } else {
              transit = trances.indexOf(trances.min())
            }
          }
          trances = [];
          if (transit >= 0) {
            transits[i] = [transit,wax];
          } else {
            transits[i] = [-1,wax];
          }
          console.log(d)
          if (d.getMonth()+1 != month) return true;
          g = canvas.group().attr("class","day d"+year+""+mon+""+da)
            .mouseover(function(){
              cl = $(this.node).attr("class").replace(/day/,"").trim().replace(" ",".");
              SVG.select(".moon."+cl).addClass("hover");
            })
            .mouseout(function(){
              cl = $(this.node).attr("class").replace(/day/,"").trim().replace(" ",".");
              if (typeof $(".moon."+cl).attr("class") != "undefined") {
                SVG.select(".moon."+cl).removeClass("hover");
              }
            })

          r = g.rect(daywidth,height).move(mleft+(day-1)*daywidth,0).fill({color:"#000",opacity:e[5]/2 + 0}).attr("data-date",formatDate(d,true))          
          g.text(String(day)).move(mleft+(day-1)*daywidth+daywidth*0.1,12-phoney*12).fill({color: (d.getDay() == 0 || d.getDay() == 6 ) ? gold : silver,opacity:1}).font({family:"Open Sans",size:daywidth*0.5,weight:800})
          canvas.line(mleft+(day-1)*daywidth,0,mleft+(day-1)*daywidth,height).stroke({color:"#000",width:1});
          canvas.line(mleft+(day-1)*daywidth,0,mleft+(day-1)*daywidth,16).stroke({color:silver,width:1});
          n = new Date();
          if (d.getFullYear()+""+d.getMonth()+""+d.getDate() == n.getFullYear()+""+n.getMonth()+""+n.getDate()) {
            var highlight = canvas.gradient('linear', function(stop) {
              stop.at({offset:0, color:"#000", opacity: e[5] * 5})
              stop.at({offset:1, color:gold, opacity: 1})
            })
            r.fill(highlight.from(0, 0.2).to(0, 1)).addClass("today")
          }
        }
      })
      if ((transit == 23 || transit == 22) && trances.indexOf(trances.min()) == 0 && false) {
        transit = -1;
      } else {
        transit = trances.indexOf(trances.min())
      }
      if (transit >= 0) {
        transits[i+1] = [transit, wax];
      } else {
        transits[i+1] = [-1,wax];
      }
      console.log(transit)
      $.each($(keytimes[year][month].full),function(i,e){
        d = new Date(e)
        d = d.addHours(tz)
        x = d.getDate() + (d.getHours()/24) + (d.getMinutes()/(24*60)) - 1
        canvas
          .circle(16*phoney)
          .attr("class","key")
          .cx(mleft+x*daywidth)
          .cy(height*mid)
          .fill({color:"#FFF"})
          .stroke({width:1,color:silver})
          .attr("data-date",formatDate(d,true))
          .attr("data-title","Dolunay")
      })

      $.each($(keytimes[year][month].new),function(i,e){
        d = new Date(e)
        d = d.addHours(tz)
        x = d.getDate() + (d.getHours()/24) + (d.getMinutes()/(24*60)) - 1
        canvas
          .circle(16*phoney)
          .attr("class","key")
          .cx(mleft+x*daywidth)
          .cy(height*mid)
          .fill({color:"#333"})
          .stroke({width:1,color:silver})
          .attr("data-date",formatDate(d,true))
          .attr("data-title","Yeniay")
      })

      e = keytimes[year][month].equi;
      if (typeof e != "undefined") {
        d = new Date(e)
        d = d.addHours(tz)
        x = d.getDate() + (d.getHours()/24) + (d.getMinutes()/(24*60)) - 1
        canvas
          .circle(24*phoney)
          .attr("class","key")
          .cx(mleft+x*daywidth)
          .cy(height*mid)
          .fill({color:gold})
          .stroke({width:1,color:silver})
          .attr("data-date",formatDate(d,true))
          .attr("data-title",d.getMonth()==2 ? "İlkbahar Ekinoksu" : "Sonbahar Ekinoksu")
      }

      e = keytimes[year][month].sols;
      if (typeof e != "undefined") {
        d = new Date(e)
        d = d.addHours(tz)
        x = d.getDate() + (d.getHours()/24) + (d.getMinutes()/(24*60)) - 1
        canvas
          .circle(24*phoney)
          .attr("class","key")
          .cx(mleft+x*daywidth)
          .cy(height*mid)
          .fill({color:gold})
          .stroke({width:1,color:silver})
          .attr("data-date",formatDate(d,true))
          .attr("data-title",d.getMonth()==5 ? "Yaz Gündönümü" : "Kış Gündönümü")
      }

      count = 0;
      last = true;
      first = true;
      revolve = 0;
      //console.log(transits)
      //cnsts.shift();
      $.each(transits,function(i,el){
        count += 1;
        if(el[0] >= 0) {
          if (last) {
            e = csv[i]
          } else {
            e = csv[Math.max(i-12,0)]
          }
          dat = new Date(csv[i][0]);
          dat = dat.addHours(tz);
          mont = dat.getMonth()+1;
          //console.log([mont,month])
          if (mont != month) return true;
          console.log(i,el)
          dayt = dat.getDate();
          mont <= 9 ? mo = "0"+String(mont) : mo = mont;
          dayt <= 9 ? da = "0"+String(dayt) : da = dayt;
          if (first && false) {
            first = false;
            revolve = false;
            return true;
          }
          cls = "moon d"+dat.getFullYear()+""+mo+""+da;
          if (revolve > 0) {
            rdat = new Date(csv[revolve][0]);
            rmont = rdat.getMonth()+1;
            rdayt = rdat.getDate() + 1;
            rmont <= 9 ? rmo = "0"+String(rmont) : rmo = rmont;
            rdayt <= 9 ? rda = "0"+String(rdayt) : rda = rdayt;
            cls += " d"+rdat.getFullYear()+""+rmo+""+rda;
            revolve = 0;
          }
          moons.push(phase(e[5],el[1],e[2],daywidth)
              .translate(
                  mleft+(count-2)*daywidth+(daywidth/24*el[0]),
                  height*(e[3]*-2+mid)
              )
              .attr("data-date",formatDate(dat,true))
              .attr("class",cls)
              .mouseover(function(){
                cl = $(this.node).attr("class").replace(/moon/,"").trim().replace(" ",".");
                if (cl.length == 9) SVG.select(".day."+cl.split(".")[0]).addClass("hover");
              })
              .mouseout(function(){
                cl = $(this.node).attr("class").replace(/moon/,"").trim().replace(" ",".");
                SVG.select(".day").removeClass("hover");
              })
          );
          last = true;
        } else {
          moons.push(null);
          last = false;
          revolve = i;
        }
      })

      $.each(cnsts,function(i,el){
        console.log(el)
        l = mleft-5+daywidth*el[2]/24;
        r = height*0.8-290;
        dat = new Date(csv[el[2]][0]);
        dat = dat.addHours(tz);
        g = canvas.group().addClass("const").attr("data-date",formatDate(dat,true))
        c = g.circle(16).translate(l,r+290).dx(-4).dy(-4).fill({color:gold,opacity:0}).scale(3*phoney)
        g.move(c.width()*-1.5*phoney,0)
        g.path(cicons[el[1]]).translate(l,r).scale(6*phoney).fill({color:silver})
        console.log()
      });
      //canvas.text(months[month] + " " + year).fill({color:gold}).font({family:"Open Sans",size:mleft *0.75,weight:800}).rotate(-90,0,0).translate(8-mleft/4,height-4);
      $(".title").html(monthm[month] + "&nbsp;" + year).css('color',gold);
    }

    function submit() {
      year = parseInt($("#year").val());
      month = parseInt($("#month").val());
      month <= 9 ? mon = "0"+String(month) : mon = month;
      $.get("/luna/"+year+"/"+mon+".csv?"+parseInt(Math.random()*999),function(data){
        csv = $.csv.toArrays(data);
        csv.shift();
      }).error(function(e,xhr,exc){
        $.get("/luna/calc/"+year+"/"+mon,function(data){
          csv = $.csv.toArrays(data);
          csv.shift();
        });
      }).complete(function(){
        getKeys();
      });
    }

    $("#submit").on("click",function(e){ submit(); });
    $("#year").keyup(function(e){ 
      if (e.keyCode == 13 ) { submit(); } 
    });
    $("#month").keyup(function(e){ 
      if ($(this).val() < 1) $(this).val(1);
      if ($(this).val() > 12) $(this).val(12);
      if (e.keyCode == 13 ) { submit(); } 
    });
    $("#canvas").on("mouseenter","rect",function(e){ 
      //console.log($(this).data("date"));
    });
    $("#canvas").on("mouseenter","g.moon *, rect.day",function(e){ 
      console.log(this)
    });
    $("#canvas").on("click","circle.key", function(e){ 
      console.log($(this).data("date"));
      console.log(trDate($(this).data("date")));
    });

    $("#canvas").on("click","rect.rainbow", function(e){ 
      console.log("eee");
    });

    $(document).ready(function(){
      if (urlParams.y && urlParams.m) {
        $("#year").val(urlParams.y);
        $("#month").val(urlParams.m);
      }
      if(navigator.geolocation && false) {
        navigator.geolocation.getCurrentPosition(function(position) {
          console.log("listo")
          console.log(position)
          lat = position.coords.latitude * Math.PI / 180;
          lon = position.coords.longitude * Math.PI / 180;
          latd = decdig(position.coords.latitude);
          lond = decdig(position.coords.longitude);
          lonc = p2c(1,lon);
          tz = tz();
          submit();
        });
      } else {
        console.log("hristo")
        lat = 41.03 * Math.PI / 180;
        lon = 29.98 * Math.PI / 180;
        latd = decdig(41.03);
        lond = decdig(29.98);
        lonc = p2c(1,lon);
        tz = tz();
        submit();
      }
    })

    Date.prototype.addHours = function(h) {    
     this.setTime(this.getTime() + (h*60*60*1000)); 
      return this;   
    }

    Array.prototype.min = function() {
      return Math.min.apply(null, this);
    };

    function p2c(radius,radian){
      return { x:radius*Math.cos(radian), y:radius*Math.sin(radian) }
    }

    function trDate(d) {
      return d.getDate()+" "+monthm[d.getMonth()+1]+" "+d.getFullYear()+", "+d.toTimeString().split(" ")[0].replace(/:00$/,"")
    }

    function tz() { return parseInt(String(new Date($.now())).match(/GMT[+-]\d{4}/)[0].substr(3)) / 100; }

    function phasepath(r,p,q) {
      g = r * 1.111 / 2
      path = "M "+ [r,0].join(" ") + " "
      path += "C " + [r+(2*g*(p-.5)), 0, 2*r*p, r-g, 2*r*p, r].join(" ") + " "
      path += "C " + [2*r*p, r+g, r+(2*g*(p-.5)), 2*r, r, 2*r].join(" ") + " "
      path += "C " + [r-(2*g*(q-.5)), 2*r, 2*r*(1-q), r+g, 2*r*(1-q), r].join(" ") + " "
      path += "C " + [2*r*(1-q), r-g, r-(2*g*(q-.5)), 0, r, 0].join(" ")
      return path
    }

    function phase(pha, wax, siz, dw) {
      if (wax) {
        s = phasepath(200, 1-pha, 1)
      } else {
        s = phasepath(200, 1, 1-pha)
      }
      group = canvas.group().attr("class","moon");
      group.circle(400).attr("class","over").fill({ opacity: 0 }).stroke({width:6/((siz*0.03+0.03)/25*dw),color:monthc[month],opacity:0}).translate(-200,-200);
      group.image('/luna/moon.png').clipWith(group.circle(400)).translate(-200,-200);
      group.path(s).fill({ color: blue, opacity: 1 }).translate(-200,-200);
      group.path(s).fill({ color: "#000", opacity: pha*0.16+0.16 }).translate(-200,-200);
      rot = wax ? 20 * (1-pha) : -20 * (1-pha);
      group.rotate(rot).attr("data-phase",wax ? pha : -1 * pha);
      group.scale((e[2]*0.03+0.03)/25*dw)
      return group;
    }

    function getKeys() {
      if (Object.keys(keytimes).indexOf(year) == -1) {
        $.ajax({dataType:"json",url:"/luna/"+year+"/keys.json"}
        ).success(function(data){
          keytimes[year] = data;
          drawMonth();
        }).fail(function(){
          setTimeout(getKeys,250);
        })
      }
    }

    function forecast() {
      $.getJSON("http://api.openweathermap.org/data/2.5/forecast?lat="+latd+"&lon="+lond+"&appid="+owmapi,function(data){
        weather = data;
      })
      return true
    }

    function decdig(a,b) {
      if (typeof(b)==='undefined') b = 2;
      c = Math.pow(10,b);
      return parseInt(a*c)/c;
    }

    $('.btn-toggle').click(function(e) {
      if($(e.target).hasClass("active")) {
        return 
      } else {
        $(this).find('.btn').toggleClass('active');  
        
        if ($(this).find('.btn-primary').size()>0) {
          $(this).find('.btn').toggleClass('btn-primary');
        }
        if ($(this).find('.btn-danger').size()>0) {
          $(this).find('.btn').toggleClass('btn-danger');
        }
        if ($(this).find('.btn-success').size()>0) {
          $(this).find('.btn').toggleClass('btn-success');
        }
        if ($(this).find('.btn-info').size()>0) {
          $(this).find('.btn').toggleClass('btn-info');
        }
        
        $(this).find('.btn').toggleClass('btn-default');
        tropic = $(this).find(".btn.active").text().match(/^Trop/) == "Trop"
        submit();
      }
    });

    function zeroPad(d) {
      return String(d <= 9 ? "0"+d : d)
    };

    function formatDate(d,t) {
      if (typeof(t)==='undefined') t = false;
      if (t) {
        return d.getFullYear()+"-"+zeroPad(d.getMonth()+1)+"-"+zeroPad(d.getDate())+" "+zeroPad(d.getHours())+":"+zeroPad(d.getMinutes())+":"+zeroPad(d.getSeconds());
      } else {
        return d.getFullYear()+"-"+zeroPad(d.getMonth()+1)+"-"+zeroPad(d.getDate())
      }
    }

    $('form').submit(function(){
      alert($(this["options"]).val());
      return false;
    });

    (window.onpopstate = function () {
      var match,
        pl     = /\+/g,
        search = /([^&=]+)=?([^&]*)/g,
        decode = function (s) { return decodeURIComponent(s.replace(pl, " ")); },
        query  = window.location.search.substring(1);
      urlParams = {};
      while (match = search.exec(query))
       urlParams[decode(match[1])] = decode(match[2]);
    })();

